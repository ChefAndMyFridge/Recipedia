services:
  jenkins:
    build:
      context: ./jenkins  # Jenkins 코드가 있는 폴더
      dockerfile: Dockerfile  # Jenkins용 Dockerfile
    # image: jenkins/jenkins:lts  # 최신 LTS 버전 사용
    environment:
      - TZ=Asia/Seoul
    container_name: my-jenkins
    user: root  # 권한 문제 방지 (필수)
    ports:
      - "8081:8080"  # 웹 UI 접근 (기본 포트 8080)
      - "50000:50000"  # 에이전트와 통신용 포트
    volumes:
      - /home/ubuntu/jenkins_data:/var/jenkins_home  # Jenkins 데이터 유지
      - /home/ubuntu/jenkins_ssh:/root/.ssh  # Jenkins 데이터 유지
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 컨테이너 제어를 위해 필요
    restart: always

  db:
    image: mysql:8
    container_name: my-mysql
    environment:
      - TZ=Asia/Seoul
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
    volumes:
      - /home/ubuntu/mysql_data:/var/lib/mysql
      - ./database/my.cnf:/etc/mysql/conf.d/custom.cnf
    networks:
      - app-network
    restart: always
  
  elasticsearch:
    container_name: my-elasticSearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"  # 메모리 설정
    ports:
      - "9200:9200"  # ✅ 외부에서 접근 가능 (localhost:9200)
      - "9300:9300"
    networks:
      - app-network
    restart: always

  kibana:
    container_name: my-kibana
    image: docker.elastic.co/kibana/kibana:7.17.3
    environment:
      - ELASTICSEARCH_HOSTS=http://my-elasticSearch:9200
    ports:
      - "5601:5601"  # ✅ Kibana 웹 UI 접근 (localhost:5601)
    depends_on:
      - elasticsearch
    networks:
      - app-network
    restart: always

networks:
  app-network:
    name: app-network  # ✅ 공통 네트워크 설정
    driver: bridge

volumes:
  mysql-data: