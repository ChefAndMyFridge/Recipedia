services:
  client:
    container_name: my-react
    build:
      context: ./frontend   # client 폴더를 빌드 컨텍스트로 지정
      dockerfile: Dockerfile  # 클라이언트용 Dockerfile 경로 (디폴트는 'Dockerfile')
    ports:
      - "3000:80"        # 클라이언트 애플리케이션의 포트를 호스트와 연결
    depends_on:
      - server
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app-network

  server:
    container_name: my-springboot
    build:
      context: ./backend   # server 폴더를 빌드 컨텍스트로 지정
      dockerfile: Dockerfile  # 서버용 Dockerfile 경로
    ports:
      - "8080:8080"        # 서버 포트 연결
    depends_on:
      db:
        condition: service_healthy  # 🔥 MySQL이 "완전히 준비될 때까지" 대기
    networks:
      - app-network
    restart: always
  
  fastapi:  # FastAPI 서비스 추가! 🚀
    container_name: my-fastapi
    build:
      context: ./ai  # FastAPI 코드가 있는 폴더
      dockerfile: Dockerfile  # FastAPI용 Dockerfile
    ports:
      - "8000:8000"  # FastAPI는 기본적으로 8000번 포트 사용
    # depends_on:
    #   db:
    #     condition: service_healthy  # MySQL이 완전히 실행된 후 시작
    networks:
      - app-network
    restart: always

  db:
    image: mysql:8
    container_name: my-mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    # ports:
    #   - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      retries: 3
      start_period: 10s

  jenkins:
    image: jenkins/jenkins:lts  # 최신 LTS 버전 사용
    container_name: my-jenkins
    user: root  # 권한 문제 방지 (필수)
    # network_mode: host
    ports:
      - "8081:8080"  # 웹 UI 접근 (기본 포트 8080)
      - "50000:50000"  # 에이전트와 통신용 포트
    volumes:
      - jenkins_home:/var/jenkins_home  # Jenkins 데이터 유지
      - /var/run/docker.sock:/var/run/docker.sock  # Docker 컨테이너 제어를 위해 필요
    # environment:
    #   - JENKINS_OPTS="--prefix=/jenkins"  # URL Prefix 설정 (옵션)
    networks:
      - app-network


networks:
  app-network:
    driver: bridge  # 서비스들

volumes:
  mysql-data:
  jenkins_home: